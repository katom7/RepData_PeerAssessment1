install.packages(c('rzmq','repr','IRkernel','IRdisplay'),
repos = c('http://irkernel.github.io/', getOption('repos')))
IRkernel::installspec()
install.packages("dplyr")
IRkernel::installspec()
install.packages("IRKernel")
ls
ls()
library(swirl)
rm(list=ls())
swirl()
5 + 7
quit
quit()
source()
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
install.packages("httpuv")
library(httpuv)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "ae9b63c244f59c7104de",
secret = "03b4b213f195fe43718f564dded94be87a8d4652")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
head(req)
req[[1]]
req[[2]]
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
unlist(req)
matrix(unlist(req), ncol=67, byrow=T)
req[[0]]
req[[1]]
req[[2]]
req[[67]]
req[[66]]
req[[10]]
summary(req)
matrix(unlist(req), ncol=10, byrow=T)
req[[1,1]]
req[[10]]
req[[11]]
req[[1]][[11]]
req[[1]][[1]]
req[[2]][[1]]
req[[1]][[2]]
req[[1]][[1]]
length(req)
req[["name"]]
summary(req)
req[["date"]]
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
summary(req)
length(req)
req[[30]]
req[[10]]
content(req)
dat <- content(req)
summar(dat)
summary(dat)
mat <- matrix(unlist(dat),30,68,byrow=T)
dat[[30]]
summary(dat)
class(dat)
length(dat)
mat <- matrix(unlist(dat),30,3,byrow=T)
matrix(unlist(dat[[0]]),1,68,byrow=T)
matrix(unlist(dat[[1]]),1,68,byrow=T)
length(dat[[1]])
matrix(unlist(dat[[1]]))
matrix(unlist(dat)
)
dat$name
dat[[1]]$name
lapply(dat.function(i){})
lapply(dat.function(i){return(c(dat[["name"]]))})
lapply(dat,function(i){return(c(dat[["name"]]))})
lapply(dat,function(i){return(c(dat[[i]]$name))})
lapply(dat,function(i){return(c(i$name))})
lsummary(dat)
summary(dat)
summary(dat[[1]])
lapply(dat,function(i){return(c(i$name,i$created_at))})
dat2 <- lapply(dat,function(i){return(c(i$name,i$created_at))})
summar(dat2)
summary(dat2)
mat <- matrix(inlist(date2))
mat <- matrix(unlist(dat2))
mat
mat <- matrix(unlist(dat2), ncol = 2, byrow=T)
mat
df <- data.frame(dat2)
df
head(df)
summary(df)
df[df$name="datasharing"]
df[df$name=="datasharing"]
df$name
dat2
mat
class(mat)
df <- data.frame(name=mat[,1],created=mat[,2])
df$name
df[df$name=="datasharing"]
df$name=="datasharing"
df[df$name == "datasharing"]
df[df$name == datasharing]
df[df$name == "datasharing"]
df[[8]]
df[[,8]]
df[,8]
df[1,1]
class(df$name)
class(df$created)
df$created
dat <- content(req)
lapply(dat,function(i){return(c(i$name,i$created_at))})
summary(dat)
dat <- content(req)
mat <- lapply(dat,function(i){return(c(i$name,i$created_at))})
summary(dat)
dat <- content(req)
mat <- lapply(dat,function(i){return(c(i$name,i$created_at))})
summary(mat)
dat <- content(req)
mat <- lapply(dat,function(i){return(c(i$name,i$created_at))})
summary(mat)
df <- dataframe(naem=mat[,1], created=mat[,2])
dat <- content(req)
mat <- lapply(dat,function(i){return(c(i$name,i$created_at))})
summary(mat)
df <- data.frame(naem=mat[,1], created=mat[,2])
dat <- content(req)
mat <- matrix(lapply(dat,function(i){return(c(i$name,i$created_at))}))
summary(mat)
df <- data.frame(naem=mat[,1], created=mat[,2])
dat <- content(req)
dat2 <- lapply(dat,function(i){return(c(i$name,i$created_at))})
mat <- matrix(dat2, ncok=2, byrow = T)
summary(mat)
df <- data.frame(name=mat[,1], created=mat[,2])
dat <- content(req)
dat2 <- lapply(dat,function(i){return(c(i$name,i$created_at))})
mat <- matrix(dat2, ncol=2, byrow = T)
summary(mat)
df <- data.frame(name=mat[,1], created=mat[,2])
df[8,]
df$created
df$name
mat
dat <- content(req)
dat2 <- lapply(dat,function(i){return(c(i$name,i$created_at))})
mat <- matrix(dat2, ncol=2, byrow = T)
summary(mat)
df <- data.frame(name=mat[,1], created=mat[,2])
dat2
mat2
mat
dat <- content(req)
dat2 <- lapply(dat,function(i){return(c(i$name,i$created_at))})
mat <- matrix(unlist(dat2), ncol = 2, byrow = T)
summary(mat)
df <- data.frame(name=mat[,1], created=mat[,2])
mat
df
df$name
df$created
dat <- content(req)
dat2 <- lapply(dat,function(i){return(c(i$name,i$created_at))})
mat <- matrix(unlist(dat2), ncol = 2, byrow = T)
summary(mat)
df <- data.frame(name=as.character(mat[,1]), created=character(mat[,2])
dat <- content(req)
dat2 <- lapply(dat,function(i){return(c(i$name,i$created_at))})
mat <- matrix(unlist(dat2), ncol = 2, byrow = T)
summary(mat)
df <- data.frame(name=as.character(mat[,1]), created=character(mat[,2]))
dat <- content(req)
dat2 <- lapply(dat,function(i){return(c(i$name,i$created_at))})
mat <- matrix(unlist(dat2), ncol = 2, byrow = T)
summary(mat)
df <- data.frame(name = as.character(mat[,1]), created = as.character(mat[,2]))
df[8,]
con = nurl("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode[10]
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
nchar(htmlCode[c(10,20,30,100)])
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "ae9b63c244f59c7104de",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
dat <- content(req)
dat2 <- lapply(dat,function(i){return(c(i$name,i$created_at))})
mat <- matrix(unlist(dat2), ncol = 2, byrow = T)
summary(mat)
df <- data.frame(name = as.character(mat[,1]), created = as.character(mat[,2]))
class(dat2)
summary(dat)
dat$name
dat[[1]]$name
dat[[1]]
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "ae9b63c244f59c7104de",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "ae9b63c244f59c7104de",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "ae9b63c244f59c7104de",
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages(c("BH", "curl", "digest", "ggplot2", "httr", "jsonlite", "memoise", "R6", "Rcpp", "stringi", "testthat"))
install.packages(c("mgcv", "nlme", "nnet"), lib="/usr/local/Cellar/r/3.2.3/R.framework/Versions/3.2/Resources/library")
install.packages(c("BH", "curl", "digest", "ggplot2", "httr",
install.packages("swirl")
install.packages("swirl")
install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("boot", "mgcv", "nlme", "nnet"))
install.packages(c('repr', 'IRkernel', 'IRdisplay'),
repos = c('http://irkernel.github.io/', getOption('repos')))
IRkernel::installspec()
install.packages(c('repr', 'IRkernel', 'IRdisplay'),
repos = c('http://irkernel.github.io/', getOption('repos')))
IRkernel::installspec(user=FALSE)
install.packages("rzmq")
install.packages(c('repr', 'IRkernel', 'IRdisplay'),
repos = c('http://irkernel.github.io/', getOption('repos')))
IRkernel::installspec(user=FALSE)
r <- getOption('repos')
r$IRkernel <- 'http://irkernel.github.io/'
options(repos = r)
update.packages(repos = c('http://irkernel.github.io/', getOption('repos')))
IRkernel::installspec(user=FALSE)
IRkernel::installspec(user = FALSE)
quit()
rm(list=ls())
getwd()
quit()
quit()
quit
brew list
quit()
quit()
quit()
library("ggplot2", lib.loc="/usr/local/lib/R/3.2/site-library")
install.packages("dpyr")
install.packages("dplyr")
library("dplyr", lib.loc="/usr/local/lib/R/3.2/site-library")
df.raw <- read.csv("activity.csv")
df.raw$date <- as.Date(df.raw$date)
library("dplyr", lib.loc="/usr/local/lib/R/3.2/site-library")
setwd("~/GitHub/RepData_PeerAssessment1")
df.raw <- read.csv("activity.csv")
df.raw$date <- as.Date(df.raw$date)
library(dplyr)
df.perday <- df.raw %>% group_by(date) %>% summarize(steps = sum(steps, na.rm=TRUE))
library(ggplot2)
p <- ggplot(df.perday, aes(date,steps))
p + geom_bar(stat="identity")
p + geom_line()
str(df.perday)
p <- ggplot(df.perday, aes(date,steps))
p + geom_line()
p <- ggplot(df.perday, aes(x=date,y=steps))
p + geom_line()
hist(df.perday$steps)
p <- ggplot(df, aes(x=date,y=steps))
p + geom_line()
str(df)
str(df.raw)
p <- ggplot(df.raw, aes(x=date,y=steps))
p + geom_line()
head(df.perday)
plot(date,steps)
plot(df.perday,date,steps)
plot(df.perday,df.perday$date,df.perday$steps)
warnings()
p <- ggplot(df.raw, aes(x=date,y=steps))
p + geom_line()
p <- ggplot(df.perday, aes(x=date,y=steps))
p + geom_line()
summary(df.perday)
p <- ggplot(df.perday, aes(x=date,y=steps))
p + geom_line()
df.perday$label
df.perday$x
df.perday$y
head(df.perday)
p <- ggplot(df.perday, aes(x=as.factor(date),y=steps))
p + geom_line()
p <- ggplot(df.perday, aes(date,steps))
p <- geom_box(xlab="day",ylab="step")
p <- geom_bar(xlab="day",ylab="step")
p <- geom_bar()
p <- ggplot(df.perday, aes(date,steps))
p <- geom_bar()
p <- geom_bar(stat="identity")
p + geom_bar(stat="identity")
p <- ggplot(df.perday, aes(date,steps))
p + geom_bar(stat="identity")
p + geom_bar(stat="identity")
